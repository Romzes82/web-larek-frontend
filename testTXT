Класс Modal
Класс для отображения элемента модального окна, открытия, закрытия, управления его содержимым. Наследуется от Component<IModalData>.

constructor(container: HTMLElement, events: IEvents) - принимает элемент-контейнер для модального окна и объект для управления событиями.
Методы:
content - Задает содержимое модального окна.
open - Открывает модальное окно и вызывает событие его открытия.
close - Закрывает модальное окно и вызывает событие его закрытия.
render - Рендерит модальное окно с переданным содержимым и открывает его.
Класс Form
Класс, предназначенный для формирования и управления формами. Обрабатывает события ввода и отправки, а также управляет состоянием валидности и отображением формы. Наследуется от Component<IFormState>.

constructor(container: HTMLFormElement, events: IEvents) - принимает контейнер формы и объект для управления событиями.
Методы:
InInputChange - Обработчик событий ввода, который генерирует события изменения для каждого поля в форме.
set valid - Контролирует активность кнопки отправки в зависимости от валидности формы.
set errors - Устанавливает и отображает ошибки валидации формы.
render - Отображает состояние формы, устанавливая ее валидность, обрабатывая ошибки и устанавливая значения полей.
Компоненты представления:
Класс Page
Класс Page управляет основными элементами интерфейса страницы, включая счетчик корзины, каталог продуктов и обертку страницы. Наследуется от Component<IPage>.

Свойства:
_counter: Элемент счетчика корзины.
_catalog: Контейнер для элементов каталога продуктов.
_wrapper: Обертка страницы.
_basket: Элемент корзины.
constructor(container: HTMLElement, events: IEvents) - Инициализирует элементы страницы и назначает обработчики событий.

Методы:
set counter(value: number) - Обновляет счетчик товаров в корзине;
set catalog(items: HTMLElement[]) - Заполняет каталог продуктов;
set locked(value: boolean) - Управляет блокировкой страницы.
Класс Card
Класс предназначенный для отображения и управления карточками товара. Он управляет отображением информации о продукте, включая название, описание, цену и изображение. Реализует интерфейс IProduct. Наследуется от Component<ICard>

Свойства:
_index: Индикатор порядкового номера продукта в корзине.
_title: Название продукта.
_description: Описание продукта.
_category: Категория продукта.
_price: Цена продукта.
_image: Изображение продукта.
_button: Кнопка действия на карточке продукта.
_buttonTitle: Название кнопки.
constructor(container: HTMLElement, actions?: IActions) - Инициализирует элементы карточки и устанавливает обработчики событий для кнопок.

Методы:
disablePriceButton - проверяет цену и делает кнопку покупки неактивной если цена не указана.
set/get id - управляет индификатором карточки.
set/get title - управляет названием товара.
set/get price - управляет ценой товара.
set/get category - управляет категорией и ее цветом.
set image - устанавливает изображение товара.
set description - устанавливает описание товара.
set buttonTitle - устанавливает textContent кнопки.
Класс Basket
Класс для отображения и управления компонентом корзины покупок. Обеспечивает отображение товаров, управление их выбором и общей стоимостью.

Свойства:
_list: HTMLElement: Список товаров в корзине.
_total: HTMLElement: Элемент для отображения общей стоимости товаров.
_button: HTMLButtonElement: Кнопка для перехода к оформлению заказа.
constructor(container: HTMLElement, events: EventEmitter) - Инициализирует элементы управления корзины и подписывается на события. Наследуется от Component<IBasketView>.

Методы:
toggleButton - Включает или выключает кнопку оформления заказа в зависимости от наличия товаров в корзине;
set items - устанавливает товары в корзине;
set total - Устанавливает и отображает общую стоимость товаров в корзине.
Класс DeliveryForm
Класс для отображения и управления формой доставки. Класс включает в себя элементы управления для выбора способа оплаты и ввода адреса доставки. Наследуется от Form<IDeliveryForm>.

Свойства:
_cardButton: Кнопка выбора оплаты картой;
_cashButton: Кнопка выбора оплаты наличными.
constructor(container: HTMLFormElement, events: IEvents, actions?: IActions) - Инициализирует элементы управления формы и устанавливает обработчики событий.

Методы:
toggleButtons - Переключает активное состояние кнопок способа оплаты;
set address - устанавливает адрес доставки.
Класс ContactForm
Класс для отображения и управления формой контактных данных, включая ввод телефона и электронной почты. Наследуется от Form<IContactForm>.

constructor(container: HTMLFormElement, events: IEvents) - принимает контейнер формы доставки и объект для управления событиями.

Методы:
set phone - устанавливает номер телефона;
set email - устанавливает адрес электронной почты.
Класс Success
Класс для отображения и управления компонентом, отображающим сообщение об успешной операции, например, после оформления заказа. Наследуется от Component<ISuccess>.

Свойства:
_close: HTMLElement: Кнопка для закрытия сообщения об успехе.
_total: HTMLElement: Элемент для отображения информации о списанных средствах или других деталях успешной операции.
constructor(container: HTMLElement, actions: ISuccessActions) - Инициализирует элементы интерфейса и назначает обработчики событий.

Методы:
set total - Устанавливает текст, отображаемый в элементе _totalElement. Используется для обновления информации о стоимости или других данных, связанных с успешным завершением операции.